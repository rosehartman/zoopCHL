geom_point()+
geom_smooth()+
facet_wrap(~Taxlifestage, scales = "free")
ggplot(allzoopmonth, aes(x = Month, y = CPUE, color = Taxlifestage))+
geom_point()+
geom_smooth()+
facet_wrap(~Taxlifestage, scales = "free")+
scale_color_discrete(guide = NULL)
allzoops = mutate(allzoops, Month2 = case_when(Taxlifestage == "Acanthocyclops_UnID NA"  ~ factor(Month, levels = c(12,1,2,3,4),
labels = c("0", "1", "2", "3", "4")),
TRUE ~ factor(Month, levels = sort(unique(Month)))),
Month3 = as.numeric(Month2))
ggplot(allzoops, aes(x = Month3, y = log(CPUE), color = Taxlifestage))+
geom_point(alpha = 0.1)+
geom_smooth()+
facet_wrap(~Taxlifestage, scales = "free")+
scale_color_discrete(guide = NULL)
unique(ZoopsSum$Taxname2)
names(ZoopsSum)
ZoopsTH = bind_rows(ZoopsSum, ZoopsSumm, ZoopsSumMM2) %>%
group_by(Region, Season, Taxname2) %>%
summarize(CPUE = mean(CPUE))
ggplot(aes(x = Region, y = CPUE, fill = Taxname2))+
facet_wrap(~Season)+geom_col()
ggplot(data = ZoopsTH, aes(x = Region, y = CPUE, fill = Taxname2))+
facet_wrap(~Season)+geom_col()
#I need a crosswalk of feeding guilds
write.csv(unique(ZoopsSum$Taxname2))
#I need a crosswalk of feeding guilds
write.csv("data/Taxnames.csv", unique(ZoopsSum$Taxname2))
#I need a crosswalk of feeding guilds
write.csv(unique(ZoopsSum$Taxname2),"data/Taxnames.csv")
#I need a crosswalk of feeding guilds
write.csv(unique(ZoopsTH$Taxname2),"data/Taxnames.csv")
guilds = read.csv("data/Taxnames.csv")
ZoopsTH = left_join(ZoopsTH, guilds)
ZoopsTH = left_join(ZoopsTH, guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTH, aes(x = Region, y = CPUE, fill = Guild))+
facet_wrap(~Season)+geom_col()
ggplot(data = ZoopsTH, aes(x = Region, y = CPUE, fill = Guild))+
facet_wrap(~Season)+geom_col(position = "fill")
ggplot(data = ZoopsTH, aes(x = Season, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
#hm. take out micros?
ZoopsTH2 = bind_rows(ZoopsSum, ZoopsSumm, ZoopsSumMM2) %>%
group_by(Region, Season, Taxname2) %>%
summarize(CPUE = mean(CPUE)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTH2, aes(x = Season, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
#hm. take out micros?
ZoopsTH2 = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
group_by(Region, Season, Taxname2) %>%
summarize(CPUE = mean(CPUE)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTH2, aes(x = Season, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
group_by(Region, Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow",
SalSurf >= 2 &SalSurf < 6  ~ "3Low",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish",
SalSurf >= 20  ~ "6Salty")) %>%
group_by(Region, Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTH2, aes(x = Season, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow",
SalSurf >= 2 &SalSurf < 6  ~ "3Low",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish",
SalSurf >= 20  ~ "6Salty")) %>%
group_by(Region, Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE)) %>%
filter(!is.na(Salbin)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow",
SalSurf >= 2 &SalSurf < 6  ~ "3Low",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish",
SalSurf >= 20  ~ "6Salty")) %>%
group_by(Region, Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE), N = n()) %>%
filter(!is.na(Salbin)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")+
geom_text(aes(y = 0.1, label = N))
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow",
SalSurf >= 2 &SalSurf < 6  ~ "3Low",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish",
SalSurf >= 20  ~ "6Salty")) %>%
group_by( Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE), N = n()) %>%
filter(!is.na(Salbin)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")+
geom_text(aes(y = 0.1, label = N))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")+
geom_text(aes(y = 0.1, label = mean(N)))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")+
geom_text(aes(y = 0.1, label = round(mean(N))))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh <0.5",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow 0.5-2",
SalSurf >= 2 &SalSurf < 6  ~ "3Low 2-6",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish 6-12",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish 12-20",
SalSurf >= 20  ~ "6Salty >20")) %>%
group_by( Taxname2, Salbin) %>%
summarize(CPUE = mean(CPUE), N = n()) %>%
filter(!is.na(Salbin)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill")
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill") +
scale_x_discrete(labels = c("<0.5", "0.5-2", "2-6", "6-12", "12-20", ">20"))
ZoopsTHSal = bind_rows(ZoopsSum,  ZoopsSumMM2) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh <0.5",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow 0.5-2",
SalSurf >= 2 &SalSurf < 6  ~ "3Low 2-6",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish 6-12",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish 12-20",
SalSurf >= 20  ~ "6Salty >20")) %>%
group_by( Taxname2, Season, Salbin) %>%
summarize(CPUE = mean(CPUE), N = n()) %>%
filter(!is.na(Salbin)) %>%
left_join(guilds, by = c("Taxname2"= "Taxname"))
ggplot(data = ZoopsTHSal, aes(x = Salbin, y = CPUE, fill = Guild))+
geom_col(position = "fill") +
facet_wrap(~Season)+
scale_x_discrete(labels = c("<0.5", "0.5-2", "2-6", "6-12", "12-20", ">20"))
library(tidyverse)
library(sf)
library(deltamapr)
library(ggspatial)
ggplot(data = ZoopsTHSal, aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Salbin)+geom_col(position = "fill")
ZoopsTHSalts = bind_rows(ZoopsSumLifestage,  ZoopsSumm_lifestage) %>%
left_join(guilds) %>%
mutate(BPUE = Biomass*CPUE) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh <0.5",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow 0.5-2",
SalSurf >= 2 &SalSurf < 6  ~ "3Low 2-6",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish 6-12",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish 12-20",
SalSurf >= 20  ~ "6Salty >20")) %>%
group_by( Taxname2, Season, Salbin, Guild, Year) %>%
summarize(CPUE = mean(CPUE), N = n(), BPUE = mean(BPUE)) %>%
filter(!is.na(Salbin))
ggplot(data = ZoopsTHSal, aes(x = Year, y = BPUE, fill = Guild))+
facet_wrap(~Salbin)+geom_col(position = "fill")
ggplot(data = ZoopsTHSalts, aes(x = Year, y = BPUE, fill = Guild))+
facet_wrap(~Salbin)+geom_col(position = "fill")
#get all the EMP and 20mm data from zooper
#If I'm using GAMs, I can do winter data after all.
Zoops = Zoopsynther(Data_type = "Community",
Sources = c("EMP", "20mm", "DOP", "FMWT", "STN"),
Size_class = "Meso",
#  Months = c(3:10),
Date_range = c("1970-01-01", "2022-12-30"),
Redownload_data = F)
library(tidyverse)
library(zooper)
library(lubridate)
#######################################################################################
#what if we group the zoops by region and chlorophyll by region?
#Then run the model on the monthly means
require(discretewq) # water quality data https://github.com/sbashevkin/discretewq
require(deltamapr) # SubRegions dataset https://github.com/InteragencyEcologicalProgram/deltamapr
require(sf)
require(hms)
require(rlang)
require(readr)
require(dtplyr) # To speed things up
require(ggplot2) # Plotting
require(geofacet) # plotting
#get all the EMP and 20mm data from zooper
#If I'm using GAMs, I can do winter data after all.
Zoopsx = Zoopsynther(Data_type = "Community",
Sources = c("EMP", "20mm", "DOP", "FMWT", "STN"),
Size_class = "Meso",
#  Months = c(3:10),
Date_range = c("1970-01-01", "2022-12-30"),
Redownload_data = F)
testx = group_by(Zoopsx, Year, Taxlifestage, Taxname) %>%
summarise(N = n(), Mean = mean(CPUE, na.rm = T))
Zoops2x = dplyr::filter(Zoopsx, Undersampled == FALSE, !is.na(Latitude), Taxname != "Oithona similis", Lifestage != "larva") %>%
mutate(Taxname2 = case_when(
Taxname == "Acanthocyclops vernalis" ~ "Acanthocyclops",
Taxname == "Sinocalanus_UnID" ~ "Sinocalanus",
Taxname == "Sinocalanus doerrii" ~ "Sinocalanus",
Taxname == "Acartiella sinensis" ~ "Acartiella_UnID",
Taxname == "Eurytemora" ~ "Eurytemora affinis",
TRUE ~ Taxname
), Month = month(Date)) %>%
group_by(SampleID, Taxname2, Month, Year, Date, Source, Station, Longitude, Latitude, SalSurf, Secchi) %>%
summarize(CPUE = sum(CPUE))
Zoops3x = dplyr::filter(Zoopsx, Undersampled == FALSE, !is.na(Latitude), Taxname != "Oithona similis", Lifestage != "larva") %>%
mutate(Taxname2 = case_when(
Taxname == "Acanthocyclops vernalis" ~ "Acanthocyclops",
Taxname == "Sinocalanus_UnID" ~ "Sinocalanus",
Taxname == "Sinocalanus doerrii" ~ "Sinocalanus",
Taxname == "Acartiella sinensis" ~ "Acartiella_UnID",
Taxname == "Eurytemora" ~ "Eurytemora affinis",
TRUE ~ Taxname
), Month = month(Date)) %>%
group_by(SampleID, Taxname2, Month, Year, Date, Source, Station, Longitude, Latitude, SalSurf, Secchi, Lifestage) %>%
summarize(CPUE = sum(CPUE))
# ZoopsSum = Zoops2 %>%
#   group_by(Station, Source, Date)%>%
#   st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
#   st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
#   st_join(Delta, join=st_intersects)%>% # Add subregions
#   filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
#   st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
#   mutate(Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
#          Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
#                           Month%in%6:8 ~ "Summer",
#                           Month%in%9:11 ~ "Fall",
#                           Month%in%c(12, 1, 2) ~ "Winter",
#                           TRUE ~ NA_character_))%>%
#   group_by(Month, Season, Region, Year, Taxname2)%>%
#   summarise(var_month_mean=mean(CPUE, na.rm = TRUE), N=n())%>%
#   ungroup()%>%
#   as_tibble() %>%
#   complete(nesting(Month, Season), Region, Year, fill=list(N=0)) # Fill in NAs for variable (and 0 for N) for any missing month, subregion, year combinations to make sure all months are represented in each season
ZoopsSumx= Zoops2x %>%
group_by(Station, Source, Date, SampleID, SalSurf, Secchi)%>%
st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
st_join(Delta, join=st_intersects)%>% # Add subregions
filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
mutate(Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
Month%in%6:8 ~ "Summer",
Month%in%9:11 ~ "Fall",
Month%in%c(12, 1, 2) ~ "Winter",
TRUE ~ NA_character_))
#Let's filter months and salinities first, then join to water quality later.
ZoopsSumLifestagex = Zoops3x %>%
group_by(Station, Source, Date, SampleID, SalSurf, Secchi)%>%
st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
st_join(Delta, join=st_intersects)%>% # Add subregions
filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
mutate(Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
Month%in%6:8 ~ "Summer",
Month%in%9:11 ~ "Fall",
Month%in%c(12, 1, 2) ~ "Winter",
TRUE ~ NA_character_))
save(ZoopsSumx, file = "data/ZoopsSumx.RData")
save(ZoopsSumLifestagex, file = "data/ZoopsSumx.RData")
#get all the EMP data from zooper
Zoopsmx = Zoopsynther(Data_type = "Community",
Sources = c("EMP"),
Size_class = "Micro",
# Months = c(3:10),
Date_range = c("1970-01-01", "2022-12-30"),
Redownload_data = F)
Zoops2mx = dplyr::filter(Zoopsmx, !Undersampled, Order != "Calanoida", !is.na(Latitude)) %>%
mutate(Taxname2 = case_when(
Taxname == "Limnoithona sinensis" ~ "Limnoithona_UnID",
Taxname == "Limnoithona tetraspina" ~ "Limnoithona_UnID",
Taxname == "Sinocalanus_UnID" ~ "Sinocalanus",
Taxname == "Synchaeta bicornis" ~ "Synchaeta_UnID",
TRUE ~ Taxname
), Month = month(Date)) %>%
group_by(SampleID, Taxname2, Month, Year, Date, Source, Station, Longitude, Latitude, SalSurf, Secchi) %>%
summarize(CPUE = sum(CPUE)) %>%
mutate(Taxname2 = str_replace(Taxname2, "_UnID", ""))
Zoops3mx = dplyr::filter(Zoopsmx, !Undersampled, Order != "Calanoida", !is.na(Latitude)) %>%
mutate(Taxname2 = case_when(
Taxname == "Limnoithona sinensis" ~ "Limnoithona_UnID",
Taxname == "Limnoithona tetraspina" ~ "Limnoithona_UnID",
Taxname == "Sinocalanus_UnID" ~ "Sinocalanus",
Taxname == "Synchaeta bicornis" ~ "Synchaeta_UnID",
TRUE ~ Taxname
), Month = month(Date)) %>%
group_by(SampleID, Taxname2, Month, Year, Date, Source, Lifestage, Station, Longitude, Latitude, SalSurf, Secchi) %>%
summarize(CPUE = sum(CPUE)) %>%
mutate(Taxname2 = str_replace(Taxname2, "_UnID", ""))
ZoopsSumm = Zoops2m %>%
group_by(Station, Source, Date)%>%
st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
st_join(Delta, join=st_intersects)%>% # Add subregions
filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
mutate(Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
Month%in%6:8 ~ "Summer",
Month%in%9:11 ~ "Fall",
Month%in%c(12, 1, 2) ~ "Winter",
TRUE ~ NA_character_))
ZoopsSumm_lifestagex = Zoops3mx %>%
group_by(Station, Source, Date)%>%
st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
st_join(Delta, join=st_intersects)%>% # Add subregions
filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
mutate(Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
Month%in%6:8 ~ "Summer",
Month%in%9:11 ~ "Fall",
Month%in%c(12, 1, 2) ~ "Winter",
TRUE ~ NA_character_))
save(ZoopsSumm_lifestagex, file = "data/ZoopsSummx.RData")
ZoopsTHSalts = bind_rows(ZoopsSumLifestagex,  ZoopsSumm_lifestagex) %>%
left_join(guilds) %>%
mutate(BPUE = Biomass*CPUE) %>%
mutate(Salbin = case_when(SalSurf < 0.5 ~ "1Fresh <0.5",
SalSurf >= 0.5 &SalSurf < 2  ~ "2VeryLow 0.5-2",
SalSurf >= 2 &SalSurf < 6  ~ "3Low 2-6",
SalSurf >= 6 &SalSurf < 12  ~ "4Brackish 6-12",
SalSurf >= 12 &SalSurf < 20  ~ "5VeryBrackish 12-20",
SalSurf >= 20  ~ "6Salty >20")) %>%
group_by( Taxname2, Season, Salbin, Guild, Year) %>%
summarize(CPUE = mean(CPUE), N = n(), BPUE = mean(BPUE)) %>%
filter(!is.na(Salbin))
ggplot(data = ZoopsTHSalts, aes(x = Year, y = BPUE, fill = Guild))+
facet_wrap(~Salbin)+geom_col(position = "fill")
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a)
ggplot(data = ZoopsTH3, aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild, Year) %>%
summarize(Biomass = sum(biomassTot)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume)
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE))
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a)
ggplot(data = ZoopsTH3, aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
load("data/filteredzoopData.RData")
load("data/ZoopsSum.RData")
load("data/ZoopsSumm.RData")
load("data/lilzoopsmean.RData")
load("data/ZoopsSumMM2.RData")
zoopstas = select(ZoopsSum, Source, Station, Latitude, Longitude, Region) %>%
filter(Source != "DOP", !Station %in% c("NZEZ6",  "NZEZ2", "NZEZ6SJR",  "NZEZ2SJR")) %>%
distinct() %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326)
#I need a crosswalk of feeding guilds
#write.csv(unique(ZoopsTH$Taxname2),"data/Taxnames.csv")
guilds = read.csv("data/Taxnames.csv")
guilds = read.csv("data/tax_meso_withbiomass.csv")
ZoopsTH2 = bind_rows(ZoopsSumLifestage,  ZoopsSumm_lifestage) %>%
left_join(guilds) %>%
mutate(BPUE = Biomass*CPUE) %>%
group_by(Region, Season, Taxname2, Lifestage, Guild) %>%
summarize(CPUE = mean(CPUE), BPUE = mean(BPUE))
#Now do it for macros zooplankton (ugh)
#but we only have lengths for EMP. FMWT is not well organized and I just don't want to deal with it.
Macinfo = Zoopsynther(Data_type = "Community",
Sources = c("EMP"),
Size_class = "Macro",
#Months = c(3:10),
Date_range = c("2000-01-01", "2022-12-30"),
Redownload_data = F)
macinfo = select(Macinfo, Source, SizeClass, Volume, SampleID, Date, Station, Year, Latitude, Longitude, SalSurf, Secchi) %>%
distinct() %>%
filter(Year >1999, !is.na(Longitude))%>%
group_by(Station, Source, Date, SalSurf, Secchi)%>%
st_as_sf(coords=c("Longitude", "Latitude"), crs=4326, remove=FALSE)%>% # Convert to sf object
st_transform(crs=st_crs(Delta))%>% # Change to crs of Delta
st_join(Delta, join=st_intersects)%>% # Add subregions
filter(!is.na(SubRegion))%>% # Remove any data outside our subregions of interest
st_drop_geometry()%>% # Drop sf geometry column since it's no longer needed
mutate(Month = month(Date), Year=if_else(Month==12, Year+1, Year), # Move Decembers to the following year
Season=case_when(Month%in%3:5 ~ "Spring", # Create seasonal variables
Month%in%6:8 ~ "Summer",
Month%in%9:11 ~ "Fall",
Month%in%c(12, 1, 2) ~ "Winter",
TRUE ~ NA_character_))
#grab mysid lenghts from EDI
maclen = read_csv("https://portal.edirepository.org/nis/dataviewer?packageid=edi.522.11&entityid=43455fa3be9f34fa745280a292801b7a")
maclen2 = mutate(maclen, Date = mdy(SampleDate)) %>%
filter(Date > ymd("2000-01-01"))
lenweight = read.csv("data/macrotax.csv")
maclen2x = left_join(maclen2, lenweight) %>%
mutate(Weight_mg = (a*(Size^b))) %>% #find weight and then convert to ug
mutate(Weight_ug = (Weight_mg*1000),
CBiomass = case_when(type == "Wet" ~ Weight_ug*.25*.4, type == "Dry" ~ Weight_ug*.4), #convert to carbon weight
biomassTot = CBiomass*AdjustedFreq) #calculate total in sample
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE))
ZoopsTH2 = bind_rows(ZoopsSumLifestage,  ZoopsSumm_lifestage) %>%
left_join(guilds) %>%
mutate(BPUE = Biomass*CPUE) %>%
group_by(Region, Season, Taxname2, Lifestage, Guild, Year) %>%
summarize(CPUE = mean(CPUE), BPUE = mean(BPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a)
ggplot(data = ZoopsTH3, aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a) %>%
filter(!is.na(Season), !is.na(Region))
ggplot(data = ZoopsTH3, aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = BPUE, fill = Guild))+
facet_grid(Season~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = BPUE, fill = Guild))+
facet_grid(Season~Region)+geom_col()
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot), Count = sum(AdjustedCount)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, CPUE = Count/Volume, Year = year(Date))
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot), Count = sum(AdjustedFreq)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, CPUE = Count/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE), CPUE = mean(CPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a) %>%
filter(!is.na(Season), !is.na(Region))
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
unique(maclen2x$Guild)
lenweight = read.csv("data/macrotax.csv")
maclen2x = left_join(maclen2, lenweight) %>%
mutate(Weight_mg = (a*(Size^b))) %>% #find weight and then convert to ug
mutate(Weight_ug = (Weight_mg*1000),
CBiomass = case_when(type == "Wet" ~ Weight_ug*.25*.4, type == "Dry" ~ Weight_ug*.4), #convert to carbon weight
biomassTot = CBiomass*AdjustedFreq) #calculate total in sample
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot), Count = sum(AdjustedFreq)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, CPUE = Count/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE), CPUE = mean(CPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a) %>%
filter(!is.na(Season), !is.na(Region))
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
maclen2x = left_join(maclen2, lenweight) %>%
mutate(Weight_mg = (a*(Size^b))) %>% #find weight and then convert to ug
mutate(Weight_ug = (Weight_mg*1000),
CBiomass = case_when(type == "Wet" ~ Weight_ug*.1*.4, type == "Dry" ~ Weight_ug*.4), #convert to carbon weight
biomassTot = CBiomass*AdjustedFreq) #calculate total in sample
maclen2a = group_by(maclen2x, Taxname2, Date, StationNZ, Guild) %>%
summarize(Biomass = sum(biomassTot), Count = sum(AdjustedFreq)) %>%
left_join(macinfo, by = c("StationNZ" = "Station", "Date")) %>%
mutate(BPUE = Biomass/Volume, CPUE = Count/Volume, Year = year(Date))
maclensum = maclen2a %>%
group_by(Region, Season, Taxname2, Guild, Year) %>%
summarize( BPUE = mean(BPUE), CPUE = mean(CPUE))
ZoopsTH3 = bind_rows(ZoopsTH2, maclen2a) %>%
filter(!is.na(Season), !is.na(Region))
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Season, y = BPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = BPUE, fill = Guild))+
facet_grid(Season~Region)+geom_col()
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = CPUE, fill = Guild))+
facet_grid(Season~Region)+geom_col()
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = CPUE, fill = Guild))+
facet_grid(Season~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = CPUE, fill = Guild))+
facet_grid(~Region)+geom_col(position = "fill")
ggplot(data = filter(ZoopsTH3, Year >2015), aes(x = Year, y = CPUE, fill = Guild))+
facet_wrap(~Region)+geom_col(position = "fill")
