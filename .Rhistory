zi = ~ log(SalSurf) , data = Eury_ad,
family= "nbinom2", na.action = "na.fail")
summary(e5adx)
plot(allEffects(e5adx))
summary(e5adx)
edadx = dredge(e5adx,  trace = 2, rank = "BIC", extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
eBestadx = get.models(edadx, 1)[[1]]
eBestadx = update(eBestadx, REML = T)
summary(eBestadx)
plot(simulateResiduals(eBestadx))
e5juvx = glmmTMB(rCPUE ~log(SalSurf)+ logChlsc + Secchisc + (1|Month) + (1|Year),
zi = ~ log(SalSurf) , data = Eury_juv,
family= "nbinom2", na.action = "na.fail")
summary(e5juvx)
plot(allEffects(e5juvx))
summary(e5juvx)
edjuvx = dredge(e5juvx,  trace = 2, rank = "BIC", extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
eBestjuvx = get.models(edjuvx, 1)[[1]]
eBestjuvx = update(eBestjuvx, REML = T)
summary(eBestjuvx)
plot(simulateResiduals(eBestjuvx))
a5adx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc+ + (1|Year),
zi = ~ log(SalSurf), data = Acart_ad,
family= "nbinom2", na.action = "na.fail")
summary(a5adx)
adadx = dredge(a5adx,trace = 2, rank = "BIC", extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
aBestadx = get.models(adadx, 1)[[1]]
aBestadx = update(aBestadx, REML =T)
a5juvx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc+ + (1|Year),
zi = ~ log(SalSurf), data = Acart_juv,
family= "nbinom2", na.action = "na.fail")
adjuvx = dredge(a5juvx,trace = 2, rank = "BIC", extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
aBestjuvx = get.models(adjuvx, 1)[[1]]
aBestjuvx = update(aBestjuvx, REML =T)
t5adx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc +  (1|Month) + logChlsc + (1|Year),
zi = ~ log(SalSurf), data = Tort_ad,
family= "nbinom2", na.action = "na.fail")
summary(t5adx)
tdadx = dredge(t5adx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
tBestadx = get.models(tdadx, 1)[[1]]
tBestadx = update(tBestad, REML = T)
summary(tBestadx)
#oh, nice, when it's just adults lilzoops are better than chlorophyll!
#Tortatuns juveniles
t5juvx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc  + (1|Month) + logChlsc + (1|Year),
zi = ~ log(SalSurf), data = Tort_juv,
family= "nbinom2", na.action = "na.fail")
summary(t5juvx)
tdjuvx = dredge(t5juvx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
tBestjuvx = get.models(tdjuvx, 1)[[1]]
tBestjuvx = update(tBestjuvx, REML = T)
summary(tBestjuvx)
#limnoithona adulat
l5adx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc +(1|Year),
zi = ~ log(SalSurf), data = Limno_ad,
family= "nbinom2", na.action = "na.fail")
summary(l5adx)
ldadx = dredge(l5adx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
lBestadx = get.models(ldadx, 1)[[1]]
lBestadx = update(lBestadx, REML =T)
summary(lBestadx)
#Juvenile limnos
l5juvx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc +(1|Year),
zi = ~ log(SalSurf), data = Limno_juv,
family= "nbinom2", na.action = "na.fail")
summary(l5juvx)
ldjuvx = dredge(l5juvx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
lBestjuvx = get.models(ldjuvx, 1)[[1]]
lBestjuvx = update(lBestjuvx, REML =T)
summary(lBestjuvx)
################################################
#acartiella adulat
acadx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc +(1|Year),
zi = ~ log(SalSurf), data = Acart_ad,
family= "nbinom2", na.action = "na.fail")
summary(acadx)
acdadx = dredge(acadx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
acBestadx = get.models(acdadx, 1)[[1]]
acBestadx = update(acBestadx, REML =T)
summary(acBestadx)
#Juvenile acartiella
acjuvx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc +(1|Year),
zi = ~ log(SalSurf), data = Acart_juv,
family= "nbinom2", na.action = "na.fail")
summary(acjuv)
acdjuv = dredge(acjuv, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
acBestjuv = get.models(acdjuv, 1)[[1]]
acBestjuv = update(acBestjuv, REML =T)
summary(acBestjuv)
getcoefs =  function(x, species) {
dat = as.data.frame(summary(x)$coefficients[[1]])
dat =   mutate(dat, params = row.names(dat), Species = species, paramtype = "count")
if(!is_null(x[[3]])) {
dat2 = as.data.frame(summary(x)$coefficients[[2]])
dat2 = mutate(dat2, params = row.names(dat2), Species = species, paramtype = "zi")
dat = bind_rows(dat, dat2)
}
return(dat)
}
rsqs =  function(y, species) {
R2 = r2(y)[[2]]
dat = data.frame(Species = species, R2a = R2)
return(dat)
}
species = "Pseudodiaptomus"
agrigate = bind_rows(getcoefs(pBestadx, "Pseudodiaptomus adult"),
getcoefs(pBestjuvx, "Pseudodiaptomus juvenikle"),
getcoefs(eBestadx, "Eurytemor adult"),
getcoefs(eBestjuvx, "Eurytemor juvenile"),
getcoefs(tBestadx, "Tortanus adult"),
getcoefs(tBestjuvx, "Tortanus juvenikle"),
getcoefs(lBestjuvx, "Limnoithona juvenile"),
getcoefs(lBestadx, "Limnoithona adult"),
getcoefs(acBestadx, "Acatrtilla adult"),
getcoefs(acBestjuvx, "Acartiella Juvinile"))%>%
mutate(pp = paste(paramtype, params))
agrigate = bind_rows(getcoefs(pBestadx, "Pseudodiaptomus adult"),
getcoefs(pBestjuvx, "Pseudodiaptomus juvenikle"),
getcoefs(eBestadx, "Eurytemor adult"),
getcoefs(eBestjuvx, "Eurytemor juvenile"),
getcoefs(tBestadx, "Tortanus adult"),
getcoefs(tBestjuvx, "Tortanus juvenikle"),
getcoefs(lBestjuvx, "Limnoithona juvenile"),
getcoefs(lBestadx, "Limnoithona adult"),
getcoefs(acBestadx, "Acatrtilla adult"),
getcoefs(acBestjuv, "Acartiella Juvinile"))%>%
mutate(pp = paste(paramtype, params))
test = agrigate  %>%
pivot_wider(id_cols = Species, names_from = pp, values_from = Estimate) %>%
pivot_longer(cols = 2:last_col(), names_to = "pp", values_to = "Estimate")
test2 = left_join(test, agrigate)
arg= str_split_fixed(test2$pp, " ", n = 2)
test3 = cbind(test2, arg) %>%
rename(Paramtype = `1`, Param = `2`) %>%
mutate(params = NULL, paramtype = NULL, Estimate2 = case_when(
`Pr(>|z|)` < 0.05 & Estimate < 0 ~ "Decrease",
`Pr(>|z|)` < 0.05 & Estimate >0 ~ "Increase",
`Pr(>|z|)` > 0.05 ~ "Not Significant",
TRUE ~ "Not Included"
))
ggplot(filter(test3, Param != "(Intercept)"), aes(x = Species, y = Param, fill = Estimate)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
test3 = mutate(test3, ParamX = factor(Param, levels = c("(Intercept)", "log(SalSurf)", "Secchisc",
"logChlsc", "lilzoops"),
labels = c("Intercept", "Salinity", "Secchi Depth",
"Chlorophyll", "Microzooplankton")),
Paramtype = factor(Paramtype, levels = c("count", "zi"), labels =
c("Count", "Zero Inflation")))
ggplot(filter(test3, Paramtype == "Count"), aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
# facet_wrap(~Paramtype) +
scale_fill_manual(values = c("lightblue", "red", "grey", "white"), name = "Model \nEstimate") +
ylab(NULL) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+
geom_text(aes(label = round(Estimate, dig = 2)))
#Maybe it makes more sense to plot. the estimates on the response scale
test3 = mutate(test3, Estimate3 = case_when(
`Pr(>|z|)` < 0.05 ~ exp(Estimate)
))
ggplot(filter(test3, Param != "Month", Param != "(Intercept)"),
aes(x = Param, y = Species, fill = Estimate3)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
#Get size classes and groups to sort by
library(readxl)
taxa = read_excel("Data/taxa.xlsx")
test3 = left_join(test3, taxa, by = c("Species"= "Taxon")) %>%
mutate(Estimate2 = case_when(ParamX == "Microzooplankton" & Species %in% c("Kerottela","Syncheata") ~ "Not Tested",
TRUE ~ Estimate2))
ggplot(filter(test3, !is.na(Paramtype)),
aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
facet_grid(~Paramtype, scales = "free_x", space = "free") +
scale_fill_manual(values = c("lightblue", "red", "grey", "white", "grey20"), name = "Model \nEstimate") +
ylab(NULL) + xlab(NULL)+
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_text(aes(label = round(Estimate, dig = 2)))+
facet_grid(FeedingGuild~Paramtype, scales = "free", space = "free")
View(test)
pBestjuvx = get.models(pdjuvx, 1)[[1]]
summary(pBestjuvx)
pBestjuvx = update(pBestjuvx, REML = TRUE)
tBestjuvx = get.models(tdjuvx, 1)[[1]]
tBestjuvx = update(tBestjuvx, REML = T)
summary(tBestjuvx)
summary(t5adx)
tBestadx = get.models(tdadx, 1)[[1]]
tBestadx = update(tBestad, REML = T)
summary(tBestadx)
tBestadx = update(tBestadx, REML = T)
summary(tBestadx)
acjuvx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc + (1|Month) + logChlsc +(1|Year),
zi = ~ log(SalSurf), data = Acart_juv,
family= "nbinom2", na.action = "na.fail")
summary(acjuvx)
acdjuvx = dredge(acjuvx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
acBestjuvx = get.models(acdjuvx, 1)[[1]]
acBestjuvx = update(acBestjuvx, REML =T)
summary(acBestjuvx)
agrigate = bind_rows(getcoefs(pBestadx, "Pseudodiaptomus adult"),
getcoefs(pBestjuvx, "Pseudodiaptomus juvenikle"),
getcoefs(eBestadx, "Eurytemor adult"),
getcoefs(eBestjuvx, "Eurytemor juvenile"),
getcoefs(tBestadx, "Tortanus adult"),
getcoefs(tBestjuvx, "Tortanus juvenikle"),
getcoefs(lBestjuvx, "Limnoithona juvenile"),
getcoefs(lBestadx, "Limnoithona adult"),
getcoefs(acBestadx, "Acatrtilla adult"),
getcoefs(acBestjuvx, "Acartiella Juvinile"))%>%
mutate(pp = paste(paramtype, params))
test = agrigate  %>%
pivot_wider(id_cols = Species, names_from = pp, values_from = Estimate) %>%
pivot_longer(cols = 2:last_col(), names_to = "pp", values_to = "Estimate")
test2 = left_join(test, agrigate)
arg= str_split_fixed(test2$pp, " ", n = 2)
test3 = cbind(test2, arg) %>%
rename(Paramtype = `1`, Param = `2`) %>%
mutate(params = NULL, paramtype = NULL, Estimate2 = case_when(
`Pr(>|z|)` < 0.05 & Estimate < 0 ~ "Decrease",
`Pr(>|z|)` < 0.05 & Estimate >0 ~ "Increase",
`Pr(>|z|)` > 0.05 ~ "Not Significant",
TRUE ~ "Not Included"
))
ggplot(filter(test3, Param != "(Intercept)"), aes(x = Species, y = Param, fill = Estimate)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
test3 = mutate(test3, ParamX = factor(Param, levels = c("(Intercept)", "log(SalSurf)", "Secchisc",
"logChlsc", "lilzoops"),
labels = c("Intercept", "Salinity", "Secchi Depth",
"Chlorophyll", "Microzooplankton")),
Paramtype = factor(Paramtype, levels = c("count", "zi"), labels =
c("Count", "Zero Inflation")))
ggplot(filter(test3, Paramtype == "Count"), aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
# facet_wrap(~Paramtype) +
scale_fill_manual(values = c("lightblue", "red", "grey", "white"), name = "Model \nEstimate") +
ylab(NULL) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+
geom_text(aes(label = round(Estimate, dig = 2)))
#Maybe it makes more sense to plot. the estimates on the response scale
test3 = mutate(test3, Estimate3 = case_when(
`Pr(>|z|)` < 0.05 ~ exp(Estimate)
))
###################################################################
#Tortanus
t5adx = glmmTMB(rCPUE ~log(SalSurf) + Secchisc +  (1|Month) + logChlsc + (1|Year),
zi = ~ log(SalSurf), data = Tort_ad,
family= "nbinom2", na.action = "na.fail")
summary(tBestadx)
summary(t5adx)
tdadx = dredge(t5adx, trace = 2, rank = "BIC",
extra = list("Rs" = function(x) {
s <- performance(x)
c(Rsqc = s$R2_conditional, Rsqm = s$R2_marginal)
}))
tBestadx = get.models(tdadx, 1)[[1]]
tBestadx = update(tBestadx, REML = T)
summary(tBestadx)
agrigate = bind_rows(getcoefs(pBestadx, "Pseudodiaptomus adult"),
getcoefs(pBestjuvx, "Pseudodiaptomus juvenikle"),
getcoefs(eBestadx, "Eurytemor adult"),
getcoefs(eBestjuvx, "Eurytemor juvenile"),
getcoefs(tBestadx, "Tortanus adult"),
getcoefs(tBestjuvx, "Tortanus juvenikle"),
getcoefs(lBestjuvx, "Limnoithona juvenile"),
getcoefs(lBestadx, "Limnoithona adult"),
getcoefs(acBestadx, "Acatrtilla adult"),
getcoefs(acBestjuvx, "Acartiella Juvinile"))%>%
mutate(pp = paste(paramtype, params))
test = agrigate  %>%
pivot_wider(id_cols = Species, names_from = pp, values_from = Estimate) %>%
pivot_longer(cols = 2:last_col(), names_to = "pp", values_to = "Estimate")
test2 = left_join(test, agrigate)
arg= str_split_fixed(test2$pp, " ", n = 2)
test3 = cbind(test2, arg) %>%
rename(Paramtype = `1`, Param = `2`) %>%
mutate(params = NULL, paramtype = NULL, Estimate2 = case_when(
`Pr(>|z|)` < 0.05 & Estimate < 0 ~ "Decrease",
`Pr(>|z|)` < 0.05 & Estimate >0 ~ "Increase",
`Pr(>|z|)` > 0.05 ~ "Not Significant",
TRUE ~ "Not Included"
))
ggplot(filter(test3, Param != "(Intercept)"), aes(x = Species, y = Param, fill = Estimate)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
test3 = mutate(test3, ParamX = factor(Param, levels = c("(Intercept)", "log(SalSurf)", "Secchisc",
"logChlsc", "lilzoops"),
labels = c("Intercept", "Salinity", "Secchi Depth",
"Chlorophyll", "Microzooplankton")),
Paramtype = factor(Paramtype, levels = c("count", "zi"), labels =
c("Count", "Zero Inflation")))
ggplot(filter(test3, Paramtype == "Count"), aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
# facet_wrap(~Paramtype) +
scale_fill_manual(values = c("lightblue", "red", "grey", "white"), name = "Model \nEstimate") +
ylab(NULL) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+
geom_text(aes(label = round(Estimate, dig = 2)))
#Maybe it makes more sense to plot. the estimates on the response scale
test3 = mutate(test3, Estimate3 = case_when(
`Pr(>|z|)` < 0.05 ~ exp(Estimate)
))
ggplot(filter(test3, Param != "Month", Param != "(Intercept)"),
aes(x = Param, y = Species, fill = Estimate3)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
#Get size classes and groups to sort by
library(readxl)
taxa = read_excel("Data/taxa.xlsx")
test3 = left_join(test3, taxa, by = c("Species"= "Taxon")) %>%
mutate(Estimate2 = case_when(ParamX == "Microzooplankton" & Species %in% c("Kerottela","Syncheata") ~ "Not Tested",
TRUE ~ Estimate2))
ggplot(filter(test3, !is.na(Paramtype)),
aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
facet_grid(~Paramtype, scales = "free_x", space = "free") +
scale_fill_manual(values = c("lightblue", "red", "grey", "white", "grey20"), name = "Model \nEstimate") +
ylab(NULL) + xlab(NULL)+
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_text(aes(label = round(Estimate, dig = 2)))+
facet_grid(FeedingGuild~Paramtype, scales = "free", space = "free")
taxa = read_excel("Data/taxa.xlsx")
test3 = left_join(test3, taxa, by = c("Species"= "Taxon")) %>%
mutate(Estimate2 = case_when(ParamX == "Microzooplankton" & Species %in% c("Kerottela","Syncheata") ~ "Not Tested",
TRUE ~ Estimate2))
ggplot(filter(test3, !is.na(Paramtype)),
aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
facet_grid(~Paramtype, scales = "free_x", space = "free") +
scale_fill_manual(values = c("lightblue", "red", "grey", "white", "grey20"), name = "Model \nEstimate") +
ylab(NULL) + xlab(NULL)+
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_text(aes(label = round(Estimate, dig = 2)))+
facet_grid(FeedingGuild~Paramtype, scales = "free", space = "free")
test3 = cbind(test2, arg) %>%
rename(Paramtype = `1`, Param = `2`) %>%
mutate(params = NULL, paramtype = NULL, Estimate2 = case_when(
`Pr(>|z|)` < 0.05 & Estimate < 0 ~ "Decrease",
`Pr(>|z|)` < 0.05 & Estimate >0 ~ "Increase",
`Pr(>|z|)` > 0.05 ~ "Not Significant",
TRUE ~ "Not Included"
))
ggplot(filter(test3, Param != "(Intercept)"), aes(x = Species, y = Param, fill = Estimate)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
test3 = mutate(test3, ParamX = factor(Param, levels = c("(Intercept)", "log(SalSurf)", "Secchisc",
"logChlsc", "lilzoops"),
labels = c("Intercept", "Salinity", "Secchi Depth",
"Chlorophyll", "Microzooplankton")),
Paramtype = factor(Paramtype, levels = c("count", "zi"), labels =
c("Count", "Zero Inflation")))
ggplot(filter(test3, Paramtype == "Count"), aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
# facet_wrap(~Paramtype) +
scale_fill_manual(values = c("lightblue", "red", "grey", "white"), name = "Model \nEstimate") +
ylab(NULL) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+
geom_text(aes(label = round(Estimate, dig = 2)))
#Maybe it makes more sense to plot. the estimates on the response scale
test3 = mutate(test3, Estimate3 = case_when(
`Pr(>|z|)` < 0.05 ~ exp(Estimate)
))
ggplot(filter(test3, Param != "Month", Param != "(Intercept)"),
aes(x = Param, y = Species, fill = Estimate3)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
#Get size classes and groups to sort by
library(readxl)
taxa = read_excel("Data/taxa.xlsx")
test3 = left_join(test3, taxa, by = c("Species"= "Taxon")) %>%
mutate(Estimate2 = case_when(ParamX == "Microzooplankton" & Species %in% c("Kerottela","Syncheata") ~ "Not Tested",
TRUE ~ Estimate2))
ggplot(filter(test3, !is.na(Paramtype)),
aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
facet_grid(~Paramtype, scales = "free_x", space = "free") +
scale_fill_manual(values = c("lightblue", "red", "grey", "white", "grey20"), name = "Model \nEstimate") +
ylab(NULL) + xlab(NULL)+
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_text(aes(label = round(Estimate, dig = 2)))+
facet_grid(FeedingGuild~Paramtype, scales = "free", space = "free")
agrigate = bind_rows(getcoefs(pBestadx, "Pseudodiaptomus adult"),
getcoefs(pBestjuvx, "Pseudodiaptomus juvenile"),
getcoefs(eBestadx, "Eurytemora adult"),
getcoefs(eBestjuvx, "Eurytemora juvenile"),
getcoefs(tBestadx, "Tortanus adult"),
getcoefs(tBestjuvx, "Tortanus juvenile"),
getcoefs(lBestjuvx, "Limnoithona juvenile"),
getcoefs(lBestadx, "Limnoithona adult"),
getcoefs(acBestadx, "Acartiella adult"),
getcoefs(acBestjuvx, "Acartiella juvenile"))%>%
mutate(pp = paste(paramtype, params))
test = agrigate  %>%
pivot_wider(id_cols = Species, names_from = pp, values_from = Estimate) %>%
pivot_longer(cols = 2:last_col(), names_to = "pp", values_to = "Estimate")
test2 = left_join(test, agrigate)
arg= str_split_fixed(test2$pp, " ", n = 2)
test3 = cbind(test2, arg) %>%
rename(Paramtype = `1`, Param = `2`) %>%
mutate(params = NULL, paramtype = NULL, Estimate2 = case_when(
`Pr(>|z|)` < 0.05 & Estimate < 0 ~ "Decrease",
`Pr(>|z|)` < 0.05 & Estimate >0 ~ "Increase",
`Pr(>|z|)` > 0.05 ~ "Not Significant",
TRUE ~ "Not Included"
))
ggplot(filter(test3, Param != "(Intercept)"), aes(x = Species, y = Param, fill = Estimate)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
test3 = mutate(test3, ParamX = factor(Param, levels = c("(Intercept)", "log(SalSurf)", "Secchisc",
"logChlsc", "lilzoops"),
labels = c("Intercept", "Salinity", "Secchi Depth",
"Chlorophyll", "Microzooplankton")),
Paramtype = factor(Paramtype, levels = c("count", "zi"), labels =
c("Count", "Zero Inflation")))
ggplot(filter(test3, Paramtype == "Count"), aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
# facet_wrap(~Paramtype) +
scale_fill_manual(values = c("lightblue", "red", "grey", "white"), name = "Model \nEstimate") +
ylab(NULL) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+
geom_text(aes(label = round(Estimate, dig = 2)))
#Maybe it makes more sense to plot. the estimates on the response scale
test3 = mutate(test3, Estimate3 = case_when(
`Pr(>|z|)` < 0.05 ~ exp(Estimate)
))
ggplot(filter(test3, Param != "Month", Param != "(Intercept)"),
aes(x = Param, y = Species, fill = Estimate3)) + geom_tile() +
facet_wrap(~Paramtype) +
scale_fill_gradient2()
#Get size classes and groups to sort by
library(readxl)
taxa = read_excel("Data/taxa.xlsx")
test3 = left_join(test3, taxa, by = c("Species"= "Taxon")) %>%
mutate(Estimate2 = case_when(ParamX == "Microzooplankton" & Species %in% c("Kerottela","Syncheata") ~ "Not Tested",
TRUE ~ Estimate2))
ggplot(filter(test3, !is.na(Paramtype)),
aes(x = ParamX, y = Species, fill = Estimate2)) + geom_tile() +
facet_grid(~Paramtype, scales = "free_x", space = "free") +
scale_fill_manual(values = c("lightblue", "red", "grey", "white", "grey20"), name = "Model \nEstimate") +
ylab(NULL) + xlab(NULL)+
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_text(aes(label = round(Estimate, dig = 2)))+
facet_grid(FeedingGuild~Paramtype, scales = "free", space = "free")
#Think about how best to display this. May not be fair to put everyone on the same scale IDK
test3 = mutate(test3, sig = case_when(
`Pr(>|z|)` < 0.05 ~ "p <0.05",
`Pr(>|z|)` > 0.05 ~ "NS"
))
#Point plot with standard error
ggplot(filter(test3,Paramtype == "Count", ParamX != "Intercept"),
aes(x = Species, y = Estimate, color = ParamX)) +
geom_point() +
geom_errorbar(aes(ymin = Estimate- `Std. Error`, ymax = Estimate + `Std. Error`))+
facet_wrap(~ParamX, scales = "free_y")+
scale_alpha_manual(values = c(0.3, 1))+
theme(axis.text.x = element_text(angle = 90))
library(tidyverse)
library(lubridate)
library(readxl)
##############################################################
#get dayflow info
load("data/Dayflow_allw2023.RData")
View(Dayflow)
DF = filter(Dayflow, Year >1999) %>%
select(Date, Out) %>%
mutate(Year = year(Date), Month = month(Date))
DF = filter(Dayflow, Year >1999) %>%
dplyr::select(Date, Out) %>%
mutate(Year = year(Date), Month = month(Date))
DF = filter(Dayflow, Year >1999) %>%
dplyr::select(Date, OUT) %>%
mutate(Year = year(Date), Month = month(Date))
View(DF)
WQ_dataNARM = left_join(WQ_dataNARM, DF)
View(DF)
DFmonth = group_by(Year, Month) %>%
summarize(OUT = mean(OUT))
DFmonth = group_by(DF, Year, Month) %>%
summarize(OUT = mean(OUT))
WQ_dataNARM = left_join(WQ_dataNARM, DFmonth)
