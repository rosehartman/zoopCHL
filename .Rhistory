Month =1:12,
Year=2000)
pred<-fitted(model, newdata=newdata, re_formula=NA, scale="response", probs=probs)
#Scale predictor variables, do some other stuff, log-transormations
ZoopMaster2 = mutate(ZoopMaster, rCPUE = round(CPUE), logCPUE = log(CPUE+1),
SalSurfsc = scale(log(SalSurf)), logChlsc = scale(logChl),
lagChlsc = scale(logChlag),
Region = as.factor(Region),
Secchisc = scale(Secchi),
Chlorophyllsc = scale(Chlorophyll), Yearsc = scale(Year),
Yearf = as.factor(Year)) %>%
filter(!is.na(Secchi), !is.na(logChl), !(is.na(SalSurf)))
newdata_pred<-newdata%>%
mutate(Pred=pred[,"Estimate"],
lowerCI=pred[,quantiles[1]],
upperCI=pred[,quantiles[2]])%>%
mutate(Month2=month(Month, label=T))
library(lubridate)
newdata_pred<-newdata%>%
mutate(Pred=pred[,"Estimate"],
lowerCI=pred[,quantiles[1]],
upperCI=pred[,quantiles[2]])%>%
mutate(Month2=month(Month, label=T))
names(Pseudopred)
PseudoPred = newdata_pred
names(PseudoPred)
p<-ggplot(PseudoPred, aes(x=Month, y=Pred, ymin=lowerCI, ymax=upperCI, fill=logChlsc, group=logChlsc))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=logChlsc))+
facet_wrap(~SalSurfsc, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
fill= as.factor(logChlsc), group=as.factor(logChlsc))+
p<-ggplot(PseudoPred, aes(x=Month, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=logChlsc))+
facet_wrap(~SalSurfsc, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
p<-ggplot(PseudoPred, aes(x=Month, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
facet_wrap(~SalSurfsc, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
p<-ggplot(PseudoPred, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
facet_wrap(~Month, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
p<-ggplot(PseudoPred, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
#geom_line(aes(color=as.factor(logChlsc)))+
facet_wrap(~Month, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
#geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
View(PseudoPred)
p<-ggplot(filter(PseudoPred, Month == 6), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
#geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
names(Pseudos)
source("C:/Users/rhartman/Desktop/ZoopCHL/zoopssalinity.R", echo=TRUE)
source("C:/Users/rhartman/Desktop/ZoopCHL/HelperFuncitons.R", echo=TRUE)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
load("OrganizedZoops.RData")
P1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Pseudos, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
#try to add the predictions
#Pseudos2 = add_epred_draws(P1, Pseudos)
PseudoPred = zoop_predict(P1, Pseudos)
p<-ggplot(PseudoPred, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
#geom_line(aes(color=as.factor(logChlsc)))+
facet_wrap(~Month, scales = "free_y")+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
#geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6, Secchisc == median(Secchisc)), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p<-ggplot(filter(PseudoPred, Month == 6, Secchisc == median(Secchisc)), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
test = filter(PseudoPred, Month == 6, Secchisc == median(Secchisc)
)
summary(PseudoPred$Secchisc)
unique(PseudoPred$Secchisc)
p<-ggplot(filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[6]), aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6, logChlsc == unique(Secchisc)[6]),
aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(Secchisc), group=as.factor(Secchisc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(Secchisc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[6]),
aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(Secchisc), group=as.factor(Secchisc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(Secchisc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
p<-ggplot(filter(PseudoPred, Month == 6, logChlsc == unique(logChlsc)[6]),
aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(Secchisc), group=as.factor(Secchisc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(Secchisc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
px = filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[6],
logChlsc %in% unique(Secchisc)[seq(1,20, length.out = 4)])
p<-ggplot(px, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
px = filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[6],
logChlsc %in% unique(logChlsc)[seq(1,20, length.out = 4)])
p<-ggplot(px, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
p
zoop_predict<-function(model, data, confidence=95){
prob_lower<-(100-confidence)/200
probs<-c(prob_lower, 1-prob_lower)
quantiles<-paste0("Q", probs*100)
newdata<-expand_grid(SalSurfsc=quantile(data$SalSurfsc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
Secchisc=quantile(data$Secchisc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
logChlsc=quantile(data$logChlsc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
Month =1:12,
Year=2000)
pred<-fitted(model, newdata=newdata, re_formula=NA, scale="response", probs=probs)
newdata_pred<-newdata%>%
mutate(Pred=pred[,"Estimate"],
lowerCI=pred[,quantiles[1]],
upperCI=pred[,quantiles[2]])%>%
mutate(Month2=month(Month, label=T))
return(newdata_pred)
}
#try to add the predictions
#Pseudos2 = add_epred_draws(P1, Pseudos)
PseudoPred = zoop_predict(P1, Pseudos)
#graph differences in chlorophyll by salinity for
pxchl = filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[10],
logChlsc %in% unique(logChlsc)[seq(1,20, length.out = 4)])
pchl<-ggplot(pxchl, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
pchl
#graph differences in chlorophyll by salinity for
pxchl = filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[10],
logChlsc %in% unique(logChlsc)[c(3,6,10,15)])
pchl<-ggplot(pxchl, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
View(PseudoPred)
zoop_predict<-function(model, data, confidence=95){
prob_lower<-(100-confidence)/200
probs<-c(prob_lower, 1-prob_lower)
quantiles<-paste0("Q", probs*100)
newdata<-expand_grid(SalSurfsc=quantile(data$SalSurfsc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
Secchisc=quantile(data$Secchisc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
logChlsc=quantile(data$logChlsc, probs=seq(0.05, 0.95, by=0.5), na.rm = T),
Month =1:12,
Year=2000)
pred<-fitted(model, newdata=newdata, re_formula=NA, scale="response", probs=probs)
newdata_pred<-newdata%>%
mutate(Pred=pred[,"Estimate"],
lowerCI=pred[,quantiles[1]],
upperCI=pred[,quantiles[2]])%>%
mutate(Month2=month(Month, label=T))
return(newdata_pred)
}
zoop_predict<-function(model, data, confidence=95){
prob_lower<-(100-confidence)/200
probs<-c(prob_lower, 1-prob_lower)
quantiles<-paste0("Q", probs*100)
newdata<-expand_grid(SalSurfsc=quantile(data$SalSurfsc, probs=seq(0.05, 0.95, by=0.05), na.rm = T),
Secchisc=quantile(data$Secchisc, probs=seq(0.05, 0.95, by=0.05), na.rm = T),
logChlsc=quantile(data$logChlsc, probs=seq(0.05, 0.95, by=0.05), na.rm = T),
Month =1:12,
Year=2000)
pred<-fitted(model, newdata=newdata, re_formula=NA, scale="response", probs=probs)
newdata_pred<-newdata%>%
mutate(Pred=pred[,"Estimate"],
lowerCI=pred[,quantiles[1]],
upperCI=pred[,quantiles[2]])%>%
mutate(Month2=month(Month, label=T))
return(newdata_pred)
}
#try to add the predictions
#Pseudos2 = add_epred_draws(P1, Pseudos)
PseudoPred = zoop_predict(P1, Pseudos)
#graph differences in chlorophyll by salinity for
pxchl = filter(PseudoPred, Month == 6, Secchisc == unique(Secchisc)[10],
logChlsc %in% unique(logChlsc)[c(3,6,10,15)])
pchl<-ggplot(pxchl, aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(logChlsc), group=as.factor(logChlsc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(logChlsc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
pchl
pxsec = filter(PseudoPred, Month == 6, logChlsc == unique(LogChlsc)[10],
Secchisc%in% unique(Secchisc)[c(1,7,13,20)])
pxsec = filter(PseudoPred, Month == 6, logChlsc == unique(logChlsc)[10],
Secchisc%in% unique(Secchisc)[c(1,7,13,20)])
psec<-ggplot(pxsec,
aes(x=SalSurfsc, y=Pred, ymin=lowerCI, ymax=upperCI,
fill= as.factor(Secchisc), group=as.factor(Secchisc)))+
geom_ribbon(alpha=0.4)+
geom_line(aes(color=as.factor(Secchisc)))+
scale_y_continuous(expand=c(0,0), limits = c(0, NA))+
ylab("CPUE")+
#facet_wrap(~Secchisc, scales = "free_y")+
theme_bw()
psec
E1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Eury, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
plot(E1)
EuryPred = zoop_predict(E1, Eury)
marginal_smooths(E1)
conditional_smooths(E1)
conditional_smooths(P1)
pp_check(P1)
pp_check(P1, type = "ecdf_overlay")
summary(P1)
gam.check(P1)
plot(conditional_effects(fit1), points = TRUE)
plot(conditional_effects(P1), points = TRUE)
save.image()
#now subset species of interest
Pseudos = filter(ZoopMaster2, Taxname2 == "Pseudodiaptomus")
Eury = filter(ZoopMaster2, Taxname2 == "Eurytemora affinis")
Acan = filter(ZoopMaster2, Taxname2 == "Acanthocyclops")
Acart = filter(ZoopMaster2, Taxname2 == "Acartiella")
Bosmina = filter(ZoopMaster2, Taxname2 == "Bosmina longirostris")
Daphnia = filter(ZoopMaster2, Taxname2 == "Daphnia")
Hyp = filter(ZoopMaster2MM2, Taxname2 == "Hyperacanthomysis longirostris")
Limno = filter(ZoopMaster2m, Taxname2 == "Limnoithona")
Kero = filter(ZoopMaster2m, Taxname2 == "Keratella")
Syn = filter(ZoopMaster2m, Taxname2 == "Synchaeta")
save(ZoopMaster2, ZoopMaster2m, ZoopMaster2MM2, Pseudos, Eury,
Acan, Bosmina, Daphnia, Hyp, Acart, Kero, Syn, Limno,file = "OrganizedZoops.RData")
library(tidyverse)
library(zooper)
library(lubridate)
library(Hmsc)
library(pscl)
library(lme4)
library(lmerTest)
library(visreg)
library(MuMIn)
library(wql)
library(MASS)
#######################################################################################
#what if we group the zoops by region and chlorophyll by region?
#Then run the model on the monthly means
require(discretewq) # water quality data https://github.com/sbashevkin/discretewq
require(deltamapr) # SubRegions dataset https://github.com/InteragencyEcologicalProgram/deltamapr
require(sf)
require(hms)
require(rlang)
require(readr)
require(dtplyr) # To speed things up
require(ggplot2) # Plotting
require(geofacet) # plotting
#now subset species of interest
Pseudos = filter(ZoopMaster2, Taxname2 == "Pseudodiaptomus")
Eury = filter(ZoopMaster2, Taxname2 == "Eurytemora affinis")
Acan = filter(ZoopMaster2, Taxname2 == "Acanthocyclops")
Acart = filter(ZoopMaster2, Taxname2 == "Acartiella")
Bosmina = filter(ZoopMaster2, Taxname2 == "Bosmina longirostris")
Daphnia = filter(ZoopMaster2, Taxname2 == "Daphnia")
Hyp = filter(ZoopMaster2MM2, Taxname2 == "Hyperacanthomysis longirostris")
Limno = filter(ZoopMaster2m, Taxname2 == "Limnoithona")
Kero = filter(ZoopMaster2m, Taxname2 == "Keratella")
Syn = filter(ZoopMaster2m, Taxname2 == "Synchaeta")
save(ZoopMaster2, ZoopMaster2m, ZoopMaster2MM2, Pseudos, Eury,
Acan, Bosmina, Daphnia, Hyp, Acart, Kero, Syn, Limno,file = "OrganizedZoops.RData")
library(lubridate)
library(tidyverse)
library(brms)
library(tidybayes)
library(ggdist)
library(rstan)
source("HelperFuncitons.R")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
load("OrganizedZoops.RData")
#####################################################################
#Syncheate
Syn$Yearf = as.factor(Syn$Year)
S1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Syn, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
summary(S1)
plot(S1)
conditional_smooths(S1)
#####################################################################
#Kerotella
Kero$Yearf = as.factor(Kero$Year)
K1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Kero, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
#####################################################################
#limnos
Limno$Yearf = as.factor(Limno$Year)
L1= brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Limno, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
conditional_smooths(L1)
########################################
#hyperacanthomysis
Hyp$Yearf = as.factor(Hyp$Year)
H1= brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Hyp, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
conditional_smooths(H1)
########################################
#acartiella
Acart$Yearf = as.factor(Acart$Year)
Ac1= brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Acart, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
Ac1= brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Acart, family = "hurdle_lognormal",
control=list(adapt_delta=0.995, max_treedepth = 15))
save.image()
source("C:/Users/rhartman/OneDrive - California Department of Water Resources/ZoopSynth/ZoopCHL/HelperFuncitons.R", echo=TRUE)
library(lubridate)
library(tidyverse)
library(brms)
library(tidybayes)
library(ggdist)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
load("OrganizedZoops.RData")
P1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Pseudos, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
install.packages(c("arrow", "askpass", "bookdown", "brms", "broom", "bslib", "classInt", "colourpicker", "cpp11", "credentials", "curl", "dataRetrieval", "datawizard", "dbplyr", "digest", "downlit", "dplyr", "DT", "duckdb", "effectsize", "emmeans", "evaluate", "flextable", "fontawesome", "fs", "future", "future.apply", "gap", "gap.datasets", "gargle", "gdistance", "geogrid", "geometries", "gert", "ggeffects", "ggfun", "ggplot2", "ggplotify", "gifski", "googledrive", "googlesheets4", "gridpattern", "gtable", "haven", "Hmisc", "htmltools", "httr", "hunspell", "igraph", "insight", "intervals", "jsonlite", "knitr", "labeling", "leaflet", "leaflet.providers", "lme4", "lpSolve", "lubridate", "lwgeom", "maptools", "markdown", "MatrixModels", "matrixStats", "minqa", "multcomp", "mvtnorm", "openssl", "parallelly", "parameters", "patchwork", "performance", "pkgbuild", "pkgload", "plotly", "plyr", "polyclip", "prettyunits", "processx", "promises", "purrr", "quantreg", "raster", "Rcpp", "RcppArmadillo", "readxl", "rematch", "remotes", "rgeos", "rmarkdown", "rnaturalearth", "rphylopic", "rstan", "rstantools", "rstudioapi", "rsvg", "s2", "sass", "scatterpie", "sf", "sfheaders", "shiny", "shinyWidgets", "sjPlot", "snakecase", "sp", "spData", "splines2", "StanHeaders", "stars", "sys", "terra", "testthat", "tidybayes", "tigris", "tinytex", "units", "usethis", "uuid", "vctrs", "VGAM", "viridis", "vroom", "withr", "wk", "xfun", "xml2", "yulab.utils"))
#
library(lubridate)
library(tidyverse)
library(lubridate)
library(tidyverse)
library(brms)
summary(Ac1)
plot(Ac1)
library(lubridate)
library(tidyverse)
library(brms)
unlink(rstan)
unlink("rstan")
install.packages("rstan")
install.packages("rstan")
library(lubridate)
library(tidyverse)
library(brms)
install.packages("rstantools")
library(lubridate)
library(tidyverse)
library(brms)
library(tidybayes)
library(ggdist)
library(rstan)
source("HelperFuncitons.R")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
load("OrganizedZoops.RData")
P1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Pseudos, family = "hurdle_lognormal", control=list(adapt_delta=0.995))
?`brm
?brm
# we recommend running this is a fresh R session or restarting your current session
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(cmdstanr)
install_cmdstan()
check_cmdstan_toolchain(fix = TRUE)
check_cmdstan_toolchain(fix = TRUE)
library(cmdstanr)
P1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Pseudos, family = "hurdle_lognormal",
control=list(adapt_delta=0.995),
backend = "cmdstan")
P1 = brm(CPUE ~ s(SalSurfsc, k = 3)+ s(Secchisc, k = 3) + s(Month, bs = "cc", k =6) +
s(logChlsc, k = 3) + (1|Region) + (1|Yearf),
data= Pseudos, family = "hurdle_lognormal",
control=list(adapt_delta=0.995),
backend = "cmdstan")
pairs(P1)
plot(P1)
load("OrganizedZoops.RData")
summary(Pseudos)
11*17
12*12
source("C:/Users/rhartman/OneDrive - California Department of Water Resources/ZoopSynth/ZoopCHL/HelperFuncitons.R")
library(lubridate)
library(tidyverse)
library(brms)
install.packages("brms")
#Check out chlorophyll and zooplankton correlations
library(tidyverse)
library(zooper)
library(lubridate)
library(Hmsc)
